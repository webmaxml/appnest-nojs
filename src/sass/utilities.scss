// ----------------------------------------- functions -----------------------------------------

// stripping units from value
@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

// value become dependent on --size value
@function size($value) {
  // one of the multiplying operands must be unitless
  // size is always px, so we need to strip the value
  $stripped: strip-unit($value);
  @return calc(#{$stripped} * (var(--size) / 100));
}

// ----------------------------------------- prop mixins -----------------------------------------

@mixin responsive-prop($prop, $val0, $vw1, $val1, $vw2: false, $val2: false, $vw3: false, $val3: false, $vw4: false, $val4: false) {
  #{$prop}: #{$val0};

  @media screen and (min-width: #{strip-unit($vw1)}px) {
    #{$prop}: #{$val1};
  }

  @if $vw2 and $val2 {
    @media screen and (min-width: #{strip-unit($vw2)}px) {
      #{$prop}: #{$val2};
    }
  }
  @if $vw3 and $val3 {
    @media screen and (min-width: #{strip-unit($vw3)}px) {
      #{$prop}: #{$val3};
    }
  }
  @if $vw4 and $val4 {
    @media screen and (min-width: #{strip-unit($vw4)}px) {
      #{$prop}: #{$val4};
    }
  }
}

@mixin fluid-prop($prop, $min, $min-vw, $max-vw, $max) {
  #{$prop}: #{$min};

  @media screen and (min-width: #{strip-unit($min-vw)}px) {
    #{$prop}: calc(#{$min} + #{strip-unit($max - $min)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
  }
  @media screen and (min-width: #{strip-unit($max-vw)}px) {
    #{$prop}: #{$max};
  }
}

// ----------------------------------------- size mixins -----------------------------------------

@mixin static-size {
  --size: 100px;
}

@mixin responsive-size($val0, $vw1, $val1, $vw2: false, $val2: false, $vw3: false, $val3: false, $vw4: false, $val4: false) {
  @include responsive-prop(--size, $val0, $vw1, $val1, $vw2, $val2, $vw3, $val3, $vw4, $val4);
}

@mixin fluid-size($min, $min-vw, $max-vw, $max) {
  @include fluid-prop(--size, $min, $min-vw, $max-vw, $max);
}

@mixin fluid-text-size {
  @include fluid-size(60px, 320px, 1280px, 100px);
}


// ----------------------------------------- other mixins -----------------------------------------


@mixin cell($area, $justify, $align) {
  grid-area: $area;
  justify-self: $justify;
  align-self: $align;
}

@mixin text($ff, $fw, $c, $fz, $lh, $tt: false, $ta: false, $td: false, $fs: false) {
  font-family: var($ff);
  font-weight: var($fw);
  color: var($c);
  font-size: $fz;
  line-height: $lh;
  @if $tt {
    text-transform: $tt;
  }
  @if $ta {
    text-align: $ta;
  }
  @if $td {
    text-decoration: $td;
  }
  @if $fs {
    font-style: $fs;
  }
}

@mixin flex($w, $j, $a) {
  display: flex;
  flex-flow: row $w;
  justify-content: $j;
  align-items: $a;
}

@mixin align-self($justify, $align) {
  justify-self: $justify;
  align-self: $align;
}

// mobile
@mixin from_360 {
  @media only screen and (min-width: 360px) {
    @content;
  }
}
@mixin from_375 {
  @media only screen and (min-width: 375px) {
    @content;
  }
}
@mixin from_393 {
  @media only screen and (min-width: 393px) {
    @content;
  }
}
@mixin from_412 {
  @media only screen and (min-width: 412px) {
    @content;
  }
}
@mixin from_480 {
  @media only screen and (min-width: 480px) {
    @content;
  }
}

// tablet
@mixin from_600 {
  @media only screen and (min-width: 600px) {
    @content;
  }
}
@mixin from_768 {
  @media only screen and (min-width: 768px) {
    @content;
  }
}
@mixin from_800 {
  @media only screen and (min-width: 800px) {
    @content;
  }
}
@mixin from_834 {
  @media only screen and (min-width: 834px) {
    @content;
  }
}
@mixin from_960 {
  @media only screen and (min-width: 960px) {
    @content;
  }
}
@mixin from_1024 {
  @media only screen and (min-width: 1024px) {
    @content;
  }
}

// desktop
@mixin from_1280 {
  @media only screen and (min-width: 1280px) {
    @content;
  }
}
@mixin from_1366 {
  @media only screen and (min-width: 1366px) {
    @content;
  }
}
@mixin from_1440 {
  @media only screen and (min-width: 1440px) {
    @content;
  }
}
@mixin from_1536 {
  @media only screen and (min-width: 1536px) {
    @content;
  }
}
@mixin from_1600 {
  @media only screen and (min-width: 1600px) {
    @content;
  }
}
@mixin from_1920 {
  @media only screen and (min-width: 1920px) {
    @content;
  }
}
@mixin from_2560 {
  @media only screen and (min-width: 2560px) {
    @content;
  }
}
@mixin from_3840 {
  @media only screen and (min-width: 3840px) {
    @content;
  }
}

@mixin from_($w) {
  @media only screen and (min-width: #{$w}px ) {
    @content;
  }
}

@mixin responsive-height($min-width, $min-height, $max-height) {
  @media only screen and ( min-width: #{$min-width}px ) {
    min-height: #{$min-height}px;
  }
  @media only screen and ( min-width: #{$min-width}px ) and ( max-height: #{$max-height}px ) {
    height: 100vh;
  }
}
