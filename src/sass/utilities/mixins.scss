@use 'modules/types' as *;
@use 'modules/prop' as *;
@use 'modules/number';
@use 'modules/color';

// ----------------------------------------- screen height section -----------------------------------------

@mixin screen-height-section($bps) {
  $bps: validate($bps, 'map');

  @each $width, $heights in $bps {
    $width: validate($width, 'number');
    $heights: validate($heights, 'list');

    $width: number.to-px($width);
    $min-height: number.to-px(nth($heights, 1));
    $max-height: number.to-px(nth($heights, 2));

    @if $min-height == $max-height {
      @media only screen and (min-width: $width) { height: auto; }
    } @else {
      @media only screen and (min-width: $width) { min-height: $min-height; }
      @media only screen and (min-width: $width) and (max-height: $max-height) { height: 100vh; }
    }
  }
}

// ----------------------------------------- flex -----------------------------------------

@mixin flex($wrap, $justify: flex-start, $align: flex-start) {
  display: flex;
  flex-flow: row $wrap;
  justify-content: $justify;
  align-items: $align;
}

// ----------------------------------------- grid -----------------------------------------

@mixin grid($template) {
  display: grid;
  @include p(grid-template, $template);
}

@mixin area($area, $justify: start, $align: start) {
  grid-area: $area;
  @include p(justify-self, $justify);
  @include p(align-self, $align);
}

// ----------------------------------------- hover lines -----------------------------------------

@mixin hover-center-line($height, $bottom, $color, $transition) {
  position: relative;

  &::after {
    position: absolute;
    left: 50%;
    bottom: $bottom;
    content: '';
    width: 0%;
    height: $height;
    background: $color;
    transition: $transition;
  }

  &:hover::after {
    display: block;
    left: 0;
    width: 100%;
  }
}

@mixin hover-left-line($height, $bottom, $color, $duration) {
  position: relative;

  &::after {
    position: absolute;
    left: 0;
    bottom: $bottom;
    content: '';
    background: $color;
    width: 0%;
    height: $height;
    transition: $duration;
  }

  &:hover::after {
    display: block;
    width: 100%;
  }
}

@mixin hover-right-line($height, $bottom, $color, $duration) {
  position: relative;

  &::after {
    position: absolute;
    right: 0;
    bottom: $bottom;
    content: '';
    background: $color;
    width: 0%;
    height: $height;
    transition: $duration;
  }

  &:hover::after {
    display: block;
    width: 100%;
  }
}

// ----------------------------------------- overlay -----------------------------------------

@mixin overlay($color-var, $opacity, $position: relative, $z: 0) {
  position: $position;
  z-index: $z;

  &::before {
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;

    display: block; 

    content: '';
    width: 100%;
    height: 100%;

    background: color.set-opacity($color-var, $opacity);
  }
}

// ----------------------------------------- text -----------------------------------------

@mixin text($ff, $fw, $fz, $lh, $c, $tt: null) {
  font-family: $ff;
  font-weight: $fw;
  font-size: $fz;
  line-height: $lh;
  color: $c;
  text-transform: $tt;
}

@mixin text-fade($height, $color) {
  position: relative;

  &::after {
    position: absolute;
    left: 0;
    bottom: 0;
    z-index: 1;

    content: '';
    width: 100%;
    height: $height;

    background: linear-gradient(to bottom, transparent, $color);
  }
}