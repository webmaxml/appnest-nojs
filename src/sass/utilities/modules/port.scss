@use 'sass:meta';
@use 'sass:string';
@use 'sass:list';
@use 'sass:map';

@function _create-port-map() {
  @return ('default': null);
}

@function _is-port-map($value) {
  @return type-of($value) == 'map' and map.has-key($value, 'default');
}

@function _get-port-value($port-map, $port) {
  @if not _is-port-map($port-map) { @error 'get-port-value() expects port-map, #{type-of($port-map)} - provided'; }
  @if not map.has-key($port-map, $port) { @error 'no such port: "#{$port}"'; }

  @return map.get($port-map, $port);
}

@function _set-port-value($port-map, $port, $value) {
  @if not _is-port-map($port-map) { @error 'set-port-value() expects port-map, #{type-of($port-map)} - provided'; }

  @return map.set($port-map, $port, $value);
}

@function has-port($this, $a) {
  @return inspect($a);
}

@function create($ports: ()) {
  @return (
    constructor: 'port',
    ports: map.deep-merge(('default': null), $ports),
    has-port: get-function('has-port')
  );
}