@use 'sass:meta';
@use 'string';
@use 'list';

@function _add-type($elem, $args...) {
  $type: meta.type-of($elem);
  @return string.unquote("#{$elem}(#{$type})");
}

@function _normalize-output($value) {
  $cb: meta.get-function('_add-type');
  $type: meta.type-of($value);

  @if $type == list {
    @return list.map($value, $cb);
  } @else if $type == map {
    $value: list.map-keys($value, $cb);
    @return string.to-string(list.map($value, $cb));
  } @else {
    @return meta.call($cb, $value);
  }
}


@function equal($actual, $expected, $message) {
  @if $actual == $expected {
    @return $message;
  } @else {
    $actual: _normalize-output($actual);
    $expected: _normalize-output($expected);

    @error "'#{$actual}' is not equals '#{$expected}' in '#{$message}'";
  }
}
