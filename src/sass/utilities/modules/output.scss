@use 'type' as *;
@use 'obj';
@use 'number';

@mixin _prop($prop, $value) {
  $prop: validate($prop, 'string');
  #{$prop}: $value;
}

@mixin _breakpoints($prop, $bps) {
  $prop: validate($prop, 'string');
  $bps: validate($bps, 'map');

  @each $width, $value in $bps {
    @if number.unit($width) != 'px' { @error "width must be px number, '#{inspect($width)}' - provided"; }

    @media screen and (min-width: $width) {
      @include _prop($prop, $value);
    }
  }
}

@mixin _output-prop($prop-obj) {
  $prop-obj: validate($prop-obj, 'Prop');

  $prop: obj.call($prop-obj, 'get-prop');
  $value: obj.call($prop-obj, 'get-value');
  $bps: obj.call($prop-obj, 'get-breakpoints');

  @include _prop($prop, $value);
  @if $bps { @include _breakpoints($prop, $bps); }
}

@mixin output($prop-list) {
  $prop-list: validate($prop-list, 'Prop-List');
  $props: obj.call($prop-list, 'get-props');

  @each $prop in $props { 
    $prop: validate($prop, 'Prop|Prop-List');

    @if is($prop, 'Prop') { @include _output-prop($prop); }
    @if is($prop, 'Prop-List') { @include output($prop); }
  }
}