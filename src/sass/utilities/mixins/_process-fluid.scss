@use 'sass:meta';
@use 'sass:list';
@use 'sass:map';
@use '../functions/is-string' as *;
@use '../functions/is-map' as *;
@use '../functions/to-px' as *;
@use '../functions/is-last-elem' as *;
@use '../functions/strip-unit' as *;

@mixin process-fluid($prop, $bps) {
  @if not is-string($prop) {
    @error "$prop in process-fluid() must be 'string', '#{meta.type-of($prop)}' - provided";
  }
  @if not is-map($bps) {
    @error "$bps in process-fluid() must be 'map', '#{meta.type-of($bps)}' - provided";
  }

  // convert keys and values to px
  $bps: to-px($bps);

  $vws: map.keys($bps);
  $values: map.values($bps);

  // set first value for prop
  #{$prop}: list.nth($values, 1);

  // for every breakpoint except last form fluid value
  @each $vw, $value in $bps {
    @if not is-last-elem($vws, $vw) {
      $next-vw: list.nth($vws, list.index($vws, $vw) + 1);
      $next-value: list.nth($values, list.index($values, $value) + 1);

      @media screen and (min-width: $vw) {
        #{$prop}: calc(#{$value} + #{strip-unit($next-value - $value)} * ((100vw - #{$vw}) / #{strip-unit($next-vw - $vw)}));
      }
    }
  }

  // set last value for prop
  $last-vw: list.nth($vws, -1);
  $last-value: list.nth($values, -1);

  @media screen and (min-width: $last-vw) {
    #{$prop}: $last-value;
  }
}
