@use '../utilities/vars/breakpoints' as *;
@use '../utilities/placeholders/container' as *;
@use '../utilities/functions/size' as *;
@use '../utilities/mixins/cell' as *;
@use '../utilities/mixins/prop' as *;
@use '../utilities/mixins/media' as *;

.s-features {
  background: var(--c_bg2);

  &__container {
    @extend %container-no-padding;
  }
}

// ----------------------------------------- grid -----------------------------------------

.s-features__container {
  display: grid;

  & .b-feature-img {
    @include cell(i, null, start);
    @include prop(--size, fluid (320: 50px, 1024: 100px));
    @include prop(justify-self, center (1200: start));
    @include prop(margin, 0 (1280: 8px 15px 0 15px));
  }
  & .b-feature-text {
    @include cell(t, null, start);
    @include prop(--size, fluid $text-breakpoints);
    @include prop(justify-self, center (1200: start));
    @include prop(width, 300px (600: 500px, 1200: auto));
    @include prop(text-align, center (1200: left));
  }
  & .b-feature-list {
    @include cell(l, null, start);
    @include prop(--size, fluid $text-breakpoints);
    @include prop(justify-self, center (1200: start));
    @include prop(width, 300px (600: 600px, 1200: auto));
    @include prop(text-align, center (1200: left));

    & .b-feature-list__icon {
      @include prop(margin, auto (1200: 0));
    }
  }

  @include prop(--t-padding, fluid (320: 45px, 1200: 122px));
  @include prop(--b-padding, fluid (320: 45px, 1200: 140px));
  grid-template:
    "." var(--t-padding)
    "t" max-content
    "." var(--t-padding)
    "l" max-content
    "." var(--t-padding)
    "i" max-content
    "." var(--b-padding)
    / 1fr;

  @include from_(1200) {
    grid-template:
    ". ." var(--t-padding)
    "i t" max-content
    "i l" max-content
    ". ." var(--b-padding)
    / 1fr 1fr;
  }
}
